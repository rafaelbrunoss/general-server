{
  "name": "general-server",
  "version": "0.0.1",
  "description": "General server using an enterprise level architecture",
  "main": "index.js",
  "scripts": {
    "pre-commit": "lint-staged",
    "format": "prettier --write . --ignore-path ./.prettierignore",
    "lint": "tslint -c tslint.json -p tsconfig.json",
    "build:pre": "npm outdated && npm audit fix --force && npm prune && npm ddp",
    "build": "npm run gulp build",
    "gulp": "gulp",
    "docker:lint": "cd ./ops/docker/lint && docker-compose up --remove-orphans && docker-compose down",
    "docker:dev": "cd ./ops/docker && ENV=dev docker-compose up --build --remove-orphans",
    "docker:prod": "cd ./ops/docker && ENV=prod docker-compose up --build --remove-orphans",
    "docker:anchore": "docker-compose -f docker-compose.anchore.yml up -d --remove-orphans && docker-compose -f docker-compose.anchore.yml exec api anchore-cli image add general_server && docker-compose -f docker-compose.anchore.yml exec api anchore-cli image wait general_server &&  docker-compose -f docker-compose.anchore.yml exec api anchore-cli image content general_server && docker-compose -f docker-compose.anchore.yml exec api anchore-cli image vuln general_server",
    "test:unit": "mocha --config 'src/tests/.mocharc.yml'",
    "test:integration": "cd ./ops/docker && ENV=test docker-compose up -d postgres redis && cd ../../server NODE_ENV=test mocha --config 'src/tests/.mocharc.yml' || ENV=test docker-compose down",
    "test:mutate": "stryker run",
    "test:coverage": "nyc --extension .ts --include 'src/app/**/*.ts' --reporter html npm test:unit",
    "autocannon": "autocannon -c100 https://localhost?query=query%20%7B%0A%20%20states%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%7D%0A%7D",
    "clinic": "clinic bubbleproof --on-port='autocannon -c100 https://localhost:3001/graphql/?query=query%20%7B%0A%20%20states%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%7D%0A%7D' -- node dist/src/index.js",
    "sonarqube": "docker-compose -f docker-compose.sonarqube.yml up --remove-orphans sonarqube db",
    "sonarscanner": "docker run --rm --network=host -e SONAR_HOST_URL=http://localhost:9000 -v ${pwd}/src:/usr/src -v ${pwd}/sonar-project.properties:/usr/src/sonar-project.properties sonarsource/sonar-scanner-cli -Dsonar.projectKey=general_server -Dsonar.sources=. -Dsonar.host.url=http://localhost:9000 -Dsonar.login=b291dc262117361bc8e4d029fb30a9eda7212c75"
  },
  "repository": {
    "type": "git"
  },
  "author": "Rafael Bruno",
  "license": "MIT",
  "_moduleAliases": {
    "@core": "./dist/core",
    "@dependencies": "./dist/dependencies",
    "@infrastructure": "./dist/infrastructure",
    "@user_interface": "./dist/user_interface",
    "@modules": "./dist/modules",
    "@tests": "./dist/tests"
  },
  "lint-staged": {
    "src/**/*.ts": [
      "npm run format"
    ]
  },
  "dependencies": {
    "@godaddy/terminus": "^4.10.2",
    "@wufe/mapper": "^0.5.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dataloader": "^2.0.0",
    "express": "^4.17.2",
    "express-graphql": "^0.12.0",
    "graphql": "^15.3.0",
    "graphql-compose": "7.25.1",
    "graphql-fields": "^2.0.3",
    "helmet": "^5.0.2",
    "http-status-codes": "^2.2.0",
    "inversify": "^6.0.1",
    "inversify-express-utils": "^6.4.3",
    "joi": "^17.6.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "method-override": "^3.0.0",
    "module-alias": "^2.2.2",
    "node-schedule": "^2.1.0",
    "overload-protection": "^1.2.3",
    "pg": "^8.7.1",
    "pg-hstore": "^2.3.4",
    "prom-client": "^14.0.1",
    "redis": "^4.0.2",
    "reflect-metadata": "^0.1.13",
    "response-time": "^2.3.2",
    "sequelize": "^6.14.1",
    "swagger-ui-express": "^4.3.0",
    "winston": "^3.5.0",
    "winston-daily-rotate-file": "^4.6.0",
    "yargs": "^17.3.1"
  },
  "devDependencies": {
    "@stryker-mutator/core": "^5.6.1",
    "@stryker-mutator/mocha-runner": "^5.6.1",
    "@types/bcryptjs": "^2.4.2",
    "@types/chai": "^4.3.0",
    "@types/compression": "^1.7.2",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/gulp-mocha": "^0.0.33",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/lodash": "^4.14.178",
    "@types/method-override": "^0.0.32",
    "@types/mocha": "^9.1.0",
    "@types/node": "^17.0.13",
    "@types/node-schedule": "^1.3.2",
    "@types/overload-protection": "^1.2.1",
    "@types/request": "^2.48.8",
    "@types/response-time": "^2.3.5",
    "@types/sequelize": "^4.28.11",
    "@types/sinon": "^10.0.9",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/yargs": "^17.0.8",
    "@typescript-eslint/eslint-plugin": "^5.10.1",
    "@typescript-eslint/eslint-plugin-tslint": "^5.10.1",
    "@typescript-eslint/parser": "^5.10.1",
    "@zerollup/ts-transform-paths": "^1.7.18",
    "autocannon": "^7.6.0",
    "chai": "^4.3.6",
    "chai-http": "^4.3.0",
    "clinic": "^11.0.0",
    "eslint": "^8.8.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-plugin-flowtype": "^8.0.3",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jsdoc": "^37.7.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-security": "^1.4.0",
    "gulp": "^4.0.2",
    "gulp-clean": "^0.4.0",
    "gulp-mocha": "^8.0.0",
    "gulp-typescript": "^5.0.1",
    "husky": "^7.0.4",
    "lint-staged": "^12.3.2",
    "mocha": "^7.2.0",
    "mocha-parallel-tests": "^2.3.0",
    "nyc": "^15.1.0",
    "prettier": "^2.5.1",
    "sinon": "^13.0.0",
    "ts-node": "^10.4.0",
    "tsconfig-paths": "^3.12.0",
    "typescript": "^4.5.5"
  }
}
